*PatternComplete.txt*	Insert mode completion for matches of queried / last search pattern.

		      PATTERN COMPLETE    by Ingo Karkat
							 *PatternComplete.vim*
description			|PatternComplete-description|
usage				|PatternComplete-usage|
installation			|PatternComplete-installation|
configuration			|PatternComplete-configuration|
limitations			|PatternComplete-limitations|
known problems			|PatternComplete-known-problems|
todo				|PatternComplete-todo|
history				|PatternComplete-history|

==============================================================================
DESCRIPTION					 *PatternComplete-description*

This plugin offers completions that either use the last search pattern or
query for a regular expression, and then offer all matches for completion.

Without this plugin, you can just directly insert the contents of the last
search pattern register via CTRL-R /, but the register can contain \<word\>
boundary characters from a |star| search or other non-literal regexp atoms
like \V, .*, etc., which you usually don't want inserted into the text.

SEE ALSO								     *

- Check out the |CompleteHelper.vim| plugin page (vimscript #3914) for a full
  list of insert mode completions powered by it.

==============================================================================
USAGE						       *PatternComplete-usage*
								  *i_CTRL-X_/*
CTRL-X /		Use a "/"-delimited (|g:PatternComplete_DelimitersPattern|)
			/{pattern}/ base before the cursor, or (if no such
			base) first queries for {pattern} (press <Enter> to
			conclude), and find matches for {pattern}.*v_CTRL-X_/*
{Visual}CTRL-X /	The completion finds matches for the selected pattern.
							       *i_CTRL-X_star*
CTRL-X *		Use a "/"-delimited /{pattern}/ base before the
			cursor, or first queries for {pattern} (press <Enter>
			to conclude), and find matches for \<{pattern}\>, or
			{pattern} surrounded by whitespace as a fallback.
							       *v_CTRL-X_star*
{Visual}CTRL-X *	Find whole word (or whole WORD as a fallback) matches
			for the selected pattern.
								  *i_CTRL-X_&*
CTRL-X &		Find matches for the last search pattern, |quote/|.
								  *c_CTRL-R_&*
CTRL-R &		Insert first match for the last search pattern
			|quote/| into the command-line.

								  *i_CTRL-X_?*
CTRL-X ?		Find matches, reusing the {pattern} from the last
			pattern completion.

==============================================================================
INSTALLATION					*PatternComplete-installation*

This script is packaged as a |vimball|. If you have the "gunzip" decompressor
in your PATH, simply edit the *.vmb.gz package in Vim; otherwise, decompress
the archive first, e.g. using WinZip. Inside Vim, install by sourcing the
vimball or via the |:UseVimball| command. >
    vim PatternComplete*.vmb.gz
    :so %
To uninstall, use the |:RmVimball| command.

DEPENDENCIES					*PatternComplete-dependencies*

- Requires Vim 7.0 or higher.
- Requires the |ingo-library.vim| plugin (vimscript #4433), version 1.011 or
  higher.
- Requires the |CompleteHelper.vim| plugin (vimscript #3914), version 1.50 or
  higher.

==============================================================================
CONFIGURATION				       *PatternComplete-configuration*

For a permanent configuration, put the following commands into your |vimrc|:

		     *b:PatternComplete_complete* *g:PatternComplete_complete*
By default, the 'complete' option controls which buffers will be scanned for
completion candidates. You can override that either for the entire plugin, or
only for particular buffers; see |CompleteHelper_complete| for supported
values. >
    let g:PatternComplete_complete = '.,w,b,u'
<
			*g:PatternComplete_DelimitersPattern*
The possible regular expression delimiters for a /{pattern}/ base before the
cursor (for |i_CTRL-X_/| and |i_CTRL-X_star|) can be configured as a pattern: >
    let g:PatternComplete_DelimitersPattern = '[/?#@]'
<
						       *PatternComplete-remap*
If you want to use different mappings, map your keys to the
<Plug>(PatternComplete) mapping targets _before_ sourcing the script (e.g.
in your |vimrc|): >
    imap <C-x>/ <Plug>(PatternCompleteInput)
    imap <C-x>* <Plug>(PatternCompleteWordInput)
    vmap <C-x>/ <Plug>(PatternCompleteInput)
    vmap <C-x>* <Plug>(PatternCompleteWordInput)
    imap <C-x>& <Plug>(PatternCompleteSearch)
    cmap <C-r>& <Plug>(PatternCompleteSearchMatch)
    imap <C-x>? <Plug>(PatternCompleteLast)
<
==============================================================================
LIMITATIONS					 *PatternComplete-limitations*

KNOWN PROBLEMS				      *PatternComplete-known-problems*

TODO							*PatternComplete-todo*

IDEAS						       *PatternComplete-ideas*

==============================================================================
HISTORY						     *PatternComplete-history*

1.10	RELEASEME
- ENH: Add <C-x>? mapping to reuse last search pattern.
- ENH: Also support visual mode variants for <C-x>/ and <C-x>*.
- ENH: Also handle /{pattern}/ base before cursor; this is often quicker and
  more comfortable to enter (using register contents, other completions, etc.)
  than the explicit user query that has been the only possibility so far.

1.02	28-Apr-2016
- Use a:options.abbreviate instead of explicit abbreviation loop. *** You need
  to update to CompleteHelper.vim (vimscript #3914) version 1.50! ***
- Remove default g:PatternComplete_complete configuration and default to
  'complete' option value instead.
- Use more functions from the ingo-library. *** You need to update to
  ingo-library (vimscript #4433) version 1.011! ***

1.01	15-Jul-2013
- DWIM: Remove the \<...\> enclosure when the last used search pattern is a
  whole word search (that just has no matches now).
- Add dependency to ingo-library (vimscript #4433).

1.00	01-Oct-2012
First published version.

0.01	03-Oct-2011
Started development.

==============================================================================
Copyright: (C) 2011-2017 Ingo Karkat
The VIM LICENSE applies to this plugin; see |copyright|.

Maintainer:	Ingo Karkat <ingo@karkat.de>
==============================================================================
 vim:tw=78:ts=8:ft=help:norl:
